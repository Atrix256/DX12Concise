* delete Device.cpp / .h



Just need to make a simple concise dx12 base.  
ditch managers etc. simple.

From there can start coding dx12 demos and things

dont need all of stb, could just get the headers you want

? get rid of d3dx12.h?
? get rid of Win32Application.h / .cpp?
? get rid of pch?

* pass swapchain format as parameter to dx12 init
* also depth stencil format

* gut everything, simple 2d shape with ndotl lighting or something

* rename project, or re-create entirely :P

* maybe yes, use self releasing pointers in dx12.h so return false etc handles things correctly. at least in the initialization part?

* make demo respect whether dx12 init succeeds or not
 * and make root signature
 * and compile vsps
 * and CreateCommandList

* it would be nice if the app didn't have to deal with "what is the current frame index", but maybe the dx12 api would give you the right one to use

* dx12 tutorial says you need a constant buffer per frame. need to make something for that, or a streaming system to make them on demand as needed.

* there's messages on shutdown about leaked objects. look into that


? how do descriptor tables work in dx12?
 * do they even do anything on release?
 * when you set something, do they just create a new SRV at the already used heap location?

? why does there need to be per frame resources here? render target views that is. does it do it underneath?

* get rid of throws? what to replace them with though?


* move dx12.h / .cpp into a library used by the other demos

* things could hold onto their cpu / gpu handles instead of calculating them on demand
 * heck, things (descriptor tables?) may be entirely representable by their handles alone